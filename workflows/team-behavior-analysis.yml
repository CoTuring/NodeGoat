name: Team Behavior Analysis

on:
  workflow_dispatch:
  # Uncomment to enable automatic runs
  # push:
  #   branches: [ main, master ]
  # pull_request:
  #   branches: [ main, master ]

jobs:
  team-behavior:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for git analysis

    - name: Analyze Git History
      id: git_analysis
      run: |
        # Get basic stats
        total_commits=$(git rev-list --count HEAD 2>/dev/null || echo 0)
        total_authors=$(git log --format='%an' | sort -u | wc -l)
        
        # Get commit frequency (commits per day since first commit)
        if [ $total_commits -gt 0 ]; then
          first_commit_date=$(git log --reverse --format='%ct' | head -1)
          last_commit_date=$(git log --format='%ct' | head -1)
          days_active=$(( (last_commit_date - first_commit_date) / 86400 + 1 ))
          if [ $days_active -gt 0 ]; then
            commits_per_day=$(echo "scale=2; $total_commits / $days_active" | bc -l 2>/dev/null || echo "0")
          else
            commits_per_day=$total_commits
          fi
        else
          commits_per_day=0
        fi
        
        # Analyze commit message quality
        good_messages=$(git log --oneline | grep -v "^[a-f0-9]\+ \(fix\|update\|commit\|.\)$" | wc -l)
        if [ $total_commits -gt 0 ]; then
          message_quality_ratio=$(echo "scale=2; $good_messages / $total_commits" | bc -l 2>/dev/null || echo "0")
        else
          message_quality_ratio=0
        fi
        
        # Check for merge commits (collaboration indicator)
        merge_commits=$(git log --merges --oneline | wc -l)
        
        echo "total_commits=$total_commits" >> $GITHUB_OUTPUT
        echo "total_authors=$total_authors" >> $GITHUB_OUTPUT
        echo "commits_per_day=$commits_per_day" >> $GITHUB_OUTPUT
        echo "message_quality_ratio=$message_quality_ratio" >> $GITHUB_OUTPUT
        echo "merge_commits=$merge_commits" >> $GITHUB_OUTPUT

    - name: Analyze GitHub Activity via API
      id: github_analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        repo="${{ github.repository }}"
        
        # Get PR stats
        pr_count=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/$repo/pulls?state=all&per_page=100" | \
          jq 'length' 2>/dev/null || echo 0)
        
        # Get issue stats
        issue_count=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/$repo/issues?state=all&per_page=100" | \
          jq '[.[] | select(.pull_request == null)] | length' 2>/dev/null || echo 0)
        
        # Get contributors
        contributors=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/$repo/contributors" | \
          jq 'length' 2>/dev/null || echo 0)
        
        echo "pr_count=$pr_count" >> $GITHUB_OUTPUT
        echo "issue_count=$issue_count" >> $GITHUB_OUTPUT
        echo "contributors=$contributors" >> $GITHUB_OUTPUT

    - name: Calculate Team Behavior Score
      id: behavior_score
      run: |
        # Get values from previous steps
        total_commits="${{ steps.git_analysis.outputs.total_commits }}"
        total_authors="${{ steps.git_analysis.outputs.total_authors }}"
        commits_per_day="${{ steps.git_analysis.outputs.commits_per_day }}"
        message_quality="${{ steps.git_analysis.outputs.message_quality_ratio }}"
        merge_commits="${{ steps.git_analysis.outputs.merge_commits }}"
        pr_count="${{ steps.github_analysis.outputs.pr_count }}"
        issue_count="${{ steps.github_analysis.outputs.issue_count }}"
        contributors="${{ steps.github_analysis.outputs.contributors }}"
        
        # Initialize score
        behavior_score=0
        
        # Commit activity (0-30 points)
        if [ $total_commits -gt 50 ]; then
          behavior_score=$((behavior_score + 30))
        elif [ $total_commits -gt 20 ]; then
          behavior_score=$((behavior_score + 20))
        elif [ $total_commits -gt 5 ]; then
          behavior_score=$((behavior_score + 15))
        elif [ $total_commits -gt 0 ]; then
          behavior_score=$((behavior_score + 10))
        fi
        
        # Collaboration (0-25 points)
        if [ $total_authors -gt 3 ]; then
          behavior_score=$((behavior_score + 25))
        elif [ $total_authors -gt 1 ]; then
          behavior_score=$((behavior_score + 20))
        elif [ $total_authors -eq 1 ]; then
          behavior_score=$((behavior_score + 10))
        fi
        
        # PR usage (0-20 points)
        if [ $pr_count -gt 10 ]; then
          behavior_score=$((behavior_score + 20))
        elif [ $pr_count -gt 5 ]; then
          behavior_score=$((behavior_score + 15))
        elif [ $pr_count -gt 0 ]; then
          behavior_score=$((behavior_score + 10))
        fi
        
        # Commit message quality (0-15 points)
        message_quality_int=$(echo "$message_quality * 100" | bc -l 2>/dev/null | cut -d. -f1)
        if [ ${message_quality_int:-0} -gt 80 ]; then
          behavior_score=$((behavior_score + 15))
        elif [ ${message_quality_int:-0} -gt 60 ]; then
          behavior_score=$((behavior_score + 10))
        elif [ ${message_quality_int:-0} -gt 40 ]; then
          behavior_score=$((behavior_score + 5))
        fi
        
        # Issue management (0-10 points)
        if [ $issue_count -gt 5 ]; then
          behavior_score=$((behavior_score + 10))
        elif [ $issue_count -gt 0 ]; then
          behavior_score=$((behavior_score + 5))
        fi
        
        echo "behavior_score=$behavior_score" >> $GITHUB_OUTPUT

    - name: Generate Team Behavior Report
      run: |
        mkdir -p reports
        cat > reports/team-behavior.json << EOF
        {
          "category": "team_behavior",
          "score": ${{ steps.behavior_score.outputs.behavior_score }},
          "max_score": 100,
          "details": {
            "total_commits": ${{ steps.git_analysis.outputs.total_commits }},
            "total_authors": ${{ steps.git_analysis.outputs.total_authors }},
            "commits_per_day": ${{ steps.git_analysis.outputs.commits_per_day }},
            "message_quality_ratio": ${{ steps.git_analysis.outputs.message_quality_ratio }},
            "merge_commits": ${{ steps.git_analysis.outputs.merge_commits }},
            "pr_count": ${{ steps.github_analysis.outputs.pr_count }},
            "issue_count": ${{ steps.github_analysis.outputs.issue_count }},
            "contributors": ${{ steps.github_analysis.outputs.contributors }}
          }
        }
        EOF

    - name: Upload Team Behavior Report
      uses: actions/upload-artifact@v4
      with:
        name: team-behavior-report
        path: reports/team-behavior.json
