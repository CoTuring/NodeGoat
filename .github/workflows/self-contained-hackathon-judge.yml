name: 🏆 Hackathon Judge (Simplified)

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, master]
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR number to analyze (optional)"
        required: false
        type: number

permissions:
  issues: write
  pull-requests: write

env:
  NODE_VERSION: "18"
  JAVA_VERSION: "17"
  SONAR_SCANNER_VERSION: "5.0.1.3006"
  PYTHON_VERSION: "3.x"

jobs:
  hackathon-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    environment: ${{ github.event.pull_request.head.repo.full_name != github.repository && 'hackathon-approval' || '' }}

    outputs:
      final_score: ${{ steps.calculate_score.outputs.overall_score }}
      sonar_url: ${{ steps.sonar_analysis.outputs.sonar_url }}

    steps:
      - name: 📋 Extract PR Information
        id: pr_info
        uses: actions/github-script@v7
        with:
          script: |
            const isPR = context.eventName === 'pull_request';
            const prNumber = isPR ? context.payload.pull_request.number : context.payload.inputs.pr_number;
            const teamName = isPR ? context.payload.pull_request.user.login : 'manual-run';
            const headSha = isPR ? context.payload.pull_request.head.sha : context.sha;
            const forkRepo = isPR ? context.payload.pull_request.head.repo.full_name : context.repo.owner + '/' + context.repo.repo;

            core.setOutput('pr_number', prNumber);
            core.setOutput('team_name', teamName);
            core.setOutput('head_sha', headSha);
            core.setOutput('fork_repo', forkRepo);
            core.setOutput('is_fork', forkRepo !== `${context.repo.owner}/${context.repo.repo}`);

      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr_info.outputs.head_sha }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Development Environment
        uses: ./.github/actions/setup-env
        with:
          node-version: ${{ env.NODE_VERSION }}
          java-version: ${{ env.JAVA_VERSION }}
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 🔍 Detect Project Stack
        id: detect_stack
        uses: ./.github/actions/detect-stack

      - name: 📦 Install Dependencies
        uses: ./.github/actions/install-deps
        with:
          language: ${{ steps.detect_stack.outputs.language }}
          framework: ${{ steps.detect_stack.outputs.framework }}

      - name: 🧪 Run Tests & Coverage
        id: test_analysis
        uses: ./.github/actions/test-coverage
        with:
          language: ${{ steps.detect_stack.outputs.language }}

      - name: 🔍 SonarCloud Analysis
        id: sonar_analysis
        uses: ./.github/actions/sonar-analysis
        with:
          project_key: ${{ vars.SONAR_PROJECT_KEY }}
          organization: ${{ vars.SONAR_ORGANIZATION }}
          language: ${{ steps.detect_stack.outputs.language }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔒 Security Analysis
        id: security_analysis
        uses: ./.github/actions/security-scan
        with:
          language: ${{ steps.detect_stack.outputs.language }}

      - name: 🎨 Frontend Usability Analysis
        id: frontend_analysis
        if: steps.detect_stack.outputs.has_frontend == 'true'
        uses: ./.github/actions/frontend-audit
        with:
          framework: ${{ steps.detect_stack.outputs.framework }}

      - name: 👥 Team Behavior Analysis
        id: team_analysis
        uses: ./.github/actions/team-behavior

      - name: 🤖 AI Usage Analysis
        id: ai_analysis
        uses: ./.github/actions/ai-detection

      - name: 📊 Calculate Final Score
        id: calculate_score
        uses: ./.github/actions/calculate-score
        with:
          test_score: ${{ steps.test_analysis.outputs.test_score }}
          sonar_score: ${{ steps.sonar_analysis.outputs.sonar_score }}
          security_score: ${{ steps.security_analysis.outputs.security_score }}
          frontend_score: ${{ steps.frontend_analysis.outputs.usability_score || '0' }}
          team_score: ${{ steps.team_analysis.outputs.behavior_score }}
          ai_score: ${{ steps.ai_analysis.outputs.ai_score }}

      - name: 💬 Post Results Comment
        if: github.event_name == 'pull_request'
        uses: ./.github/actions/post-comment
        with:
          overall_score: ${{ steps.calculate_score.outputs.overall_score }}
          test_score: ${{ steps.test_analysis.outputs.test_score }}
          sonar_score: ${{ steps.sonar_analysis.outputs.sonar_score }}
          sonar_url: ${{ steps.sonar_analysis.outputs.sonar_url }}
          security_score: ${{ steps.security_analysis.outputs.security_score }}
          frontend_score: ${{ steps.frontend_analysis.outputs.usability_score || '0' }}
          team_score: ${{ steps.team_analysis.outputs.behavior_score }}
          ai_score: ${{ steps.ai_analysis.outputs.ai_score }}
          detected_stack: ${{ steps.detect_stack.outputs.framework }}
          pr_number: ${{ steps.pr_info.outputs.pr_number }}
          team_name: ${{ steps.pr_info.outputs.team_name }}

      - name: 📁 Upload Analysis Reports
        uses: actions/upload-artifact@v4
        with:
          name: hackathon-analysis-${{ steps.pr_info.outputs.team_name }}-pr${{ steps.pr_info.outputs.pr_number }}
          path: |
            reports/
            *.json
          retention-days: 30
          if-no-files-found: ignore

      - name: 📋 Job Summary
        run: |
          cat << 'EOF' >> $GITHUB_STEP_SUMMARY
          ## 🏆 Hackathon Analysis Complete

          **Team:** ${{ steps.pr_info.outputs.team_name }}  
          **Final Score:** ${{ steps.calculate_score.outputs.overall_score }}/100  
          **Stack:** ${{ steps.detect_stack.outputs.framework }} (${{ steps.detect_stack.outputs.language }})

          ### 📊 Score Breakdown
          - **Tests & Coverage:** ${{ steps.test_analysis.outputs.test_score }}/100
          - **Code Quality (SonarCloud):** ${{ steps.sonar_analysis.outputs.sonar_score }}/100
          - **Security:** ${{ steps.security_analysis.outputs.security_score }}/100
          - **Frontend UX:** ${{ steps.frontend_analysis.outputs.usability_score || '0' }}/100
          - **Team Collaboration:** ${{ steps.team_analysis.outputs.behavior_score }}/100
          - **AI Attribution:** ${{ steps.ai_analysis.outputs.ai_score }}/100

          ### 🔗 Resources
          - [SonarCloud Report](${{ steps.sonar_analysis.outputs.sonar_url }})
          - [Analysis Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          EOF
