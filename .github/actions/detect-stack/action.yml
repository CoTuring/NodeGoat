name: "Detect Project Stack"
description: "Detect programming language and framework"

outputs:
  language:
    description: "Detected programming language"
    value: ${{ steps.detect.outputs.language }}
  framework:
    description: "Detected framework"
    value: ${{ steps.detect.outputs.framework }}
  has_frontend:
    description: "Whether project has frontend components"
    value: ${{ steps.detect.outputs.has_frontend }}

runs:
  using: "composite"
  steps:
    - name: 🔍 Analyze Project Structure
      shell: bash
      run: |
        # Default values
        LANGUAGE="generic"
        FRAMEWORK="generic"
        HAS_FRONTEND="false"

        # Detect language and framework
        if [ -f "package.json" ]; then
          LANGUAGE="javascript"
          if grep -q "react\|vue\|angular\|svelte\|next\|nuxt" package.json; then
            HAS_FRONTEND="true"
            if grep -q "react" package.json; then
              FRAMEWORK="react"
            elif grep -q "vue" package.json; then
              FRAMEWORK="vue"
            elif grep -q "angular" package.json; then
              FRAMEWORK="angular"
            elif grep -q "next" package.json; then
              FRAMEWORK="nextjs"
            else
              FRAMEWORK="javascript"
            fi
          else
            FRAMEWORK="nodejs"
          fi
        elif [ -f "requirements.txt" ] || [ -f "pyproject.toml" ] || [ -f "setup.py" ]; then
          LANGUAGE="python"
          FRAMEWORK="python"
          if grep -q "flask\|django\|fastapi" requirements.txt pyproject.toml setup.py 2>/dev/null; then
            HAS_FRONTEND="true"
            FRAMEWORK="python-web"
          fi
        elif [ -f "go.mod" ]; then
          LANGUAGE="go"
          FRAMEWORK="go"
        elif [ -f "pom.xml" ] || [ -f "build.gradle" ]; then
          LANGUAGE="java"
          FRAMEWORK="java"
        elif [ -f "Cargo.toml" ]; then
          LANGUAGE="rust"
          FRAMEWORK="rust"
        else
          # Check for HTML files as fallback
          html_files=$(find . -name "*.html" | head -5 | wc -l)
          if [ $html_files -gt 0 ]; then
            HAS_FRONTEND="true"
            FRAMEWORK="html"
          fi
        fi

        echo "language=$LANGUAGE" >> $GITHUB_OUTPUT
        echo "framework=$FRAMEWORK" >> $GITHUB_OUTPUT
        echo "has_frontend=$HAS_FRONTEND" >> $GITHUB_OUTPUT

        echo "✅ Detected: $LANGUAGE ($FRAMEWORK) - Frontend: $HAS_FRONTEND"
