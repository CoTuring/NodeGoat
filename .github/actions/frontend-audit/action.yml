name: "Frontend Usability Audit"
description: "Run Lighthouse and frontend usability analysis"

inputs:
  framework:
    description: "Frontend framework"
    required: true

outputs:
  usability_score:
    description: "Usability score out of 100"
    value: ${{ steps.audit.outputs.usability_score }}
  lighthouse_performance:
    description: "Lighthouse performance score"
    value: ${{ steps.audit.outputs.lighthouse_performance }}
  lighthouse_accessibility:
    description: "Lighthouse accessibility score"
    value: ${{ steps.audit.outputs.lighthouse_accessibility }}
  lighthouse_seo:
    description: "Lighthouse SEO score"
    value: ${{ steps.audit.outputs.lighthouse_seo }}

runs:
  using: "composite"
  steps:
    - name: 🎨 Frontend Usability Analysis
      shell: bash
      run: |
        usability_score=0
        performance_score=0
        accessibility_score=0
        seo_score=0

        echo "🎨 Installing frontend audit tools..."
        npm install -g http-server @lhci/cli lighthouse 2>/dev/null || true

        # Build frontend if possible
        if [ -f "package.json" ]; then
          npm run build 2>/dev/null || npm run build:prod 2>/dev/null || npm run dist 2>/dev/null || true
        fi

        # Determine what to serve
        if [ -d "dist" ]; then
          serve_dir="dist"
        elif [ -d "build" ]; then
          serve_dir="build"
        elif [ -d "public" ]; then
          serve_dir="public"
        else
          serve_dir="."
        fi

        echo "🎨 Starting local server for $serve_dir..."
        http-server $serve_dir -p 8080 &
        SERVER_PID=$!
        sleep 5

        # Run Lighthouse audit
        echo "🎨 Running Lighthouse audit..."
        lighthouse http://localhost:8080 \
          --output json \
          --output-path lighthouse-report.json \
          --chrome-flags="--headless --no-sandbox --disable-gpu" \
          2>/dev/null || true

        # Kill server
        kill $SERVER_PID 2>/dev/null || true

        # Parse Lighthouse results
        if [ -f "lighthouse-report.json" ]; then
          performance_score=$(jq '.categories.performance.score * 100' lighthouse-report.json 2>/dev/null || echo "0")
          accessibility_score=$(jq '.categories.accessibility.score * 100' lighthouse-report.json 2>/dev/null || echo "0")
          seo_score=$(jq '.categories.seo.score * 100' lighthouse-report.json 2>/dev/null || echo "0")
          
          # Calculate overall usability score
          usability_score=$(echo "scale=0; ($performance_score + $accessibility_score + $seo_score) / 3" | bc 2>/dev/null || echo "0")
        else
          echo "⚠️ Lighthouse audit failed, using basic scoring"
          # Basic scoring based on framework detection
          case "${{ inputs.framework }}" in
            "react"|"vue"|"angular"|"nextjs")
              usability_score=70
              ;;
            "html")
              usability_score=50
              ;;
            *)
              usability_score=30
              ;;
          esac
        fi

        echo "usability_score=$usability_score" >> $GITHUB_OUTPUT
        echo "lighthouse_performance=${performance_score%.*}" >> $GITHUB_OUTPUT
        echo "lighthouse_accessibility=${accessibility_score%.*}" >> $GITHUB_OUTPUT
        echo "lighthouse_seo=${seo_score%.*}" >> $GITHUB_OUTPUT

        echo "✅ Frontend audit complete - Score: $usability_score/100 | Performance: ${performance_score%.*} | A11y: ${accessibility_score%.*} | SEO: ${seo_score%.*}"
